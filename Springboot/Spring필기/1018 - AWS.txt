AWS(아마존 웹 서비스)
클라우드 컴퓨팅 서비스를 제공

로컬환경 : 자신의 컴퓨터나 개인서버에서 실행하고 테스트하는 환경 .

프로젝트를 빌드.
스프링부트 -> ./gradlew build  -> 프로젝트.jar
리액트 -> npm run build  ->html,css,js와 같은 정적파일을 모은 build 폴더 

Iaas
IaaS는 서버, 네트워크, 저장 공간 같은 기본적인 컴퓨터 자원을 인터넷을 통해 빌려주는 서비스다. 예시: AWS(아마존 웹 서비스), Google Cloud
PaaS
PaaS는 애플리케이션을 만들고 배포할 수 있는 플랫폼을 제공하는 서비스입니다.
예시: Heroku, Google App Engine
SaaS
SaaS는 인터넷을 통해 소프트웨어를 제공하는 서비스입니다.
예시: Google Docs, Dropbox, Slack 


CI/CD
우리가 서비스를 배포하고 운영하던 중 코드를 변경할 일이 생기면 어떻게 해야할까?
코드를 수정하고, 로컬 환경에서 테스트를 진행한다.
빌드가 잘 되는지 확인한다.
그 다음에 jar파일을 생성해 복사를 진행한다.
AWS에 접속해서 복사한 jar파일을 업로드해 새 배포 버전을 제공한다.
프로젝트의 규모가 커지게 되면 이 작업은 굉장히 힘들어진다.
이 때 도입하는것이 CI/CD이다.
이 방법을 도입하면 빌드부터 배포까지의 과정을 자동화 할 수 있고, 잘 되는지 모니터링 할 수 있다.

CI(Continuous Integration)
한글로 직역을 하자면 지속적인 통합을 의미한다.
개발자를 위해 빌드와 테스트를 자동화하는 과정이다.
CI는 변경 사항을 자동으로 테스트해 애플리케이션에 문제가 없다는것을 보장한다.
그리고 정기적으로 빌드하고, 테스트하므로 여러 명이 동시에 작업을 하는 경우 충돌을 방지하고 모니터링 할 수 있다.
코드 변경 사항이 코드 저장소에 업로드되면 CI를 시작하고, CI 도중에 문제가 생기면 실패하므로 코드의 오류도 쉽게 파악할 수 있다.

CD(Continuous Deployment)
배포 준비가 된 코드를 자동으로 서버에 배포하는 작업을 자동화 한다.
CI가 통과되면 개발자가 수작업으로 코드를 배포하지 않아도 자동으로 배포하니 매우 편리해진다.
CD는 지속적인 제공의 continuous Delivery라는 의미도 가진다.

git과 github의 차이

git : 버전 관리 프로그램 . (로컬에서 작동)

github : 프로젝트를 저장할 수 있는 원격 저장소 (인터넷이 있어야 작동 )

공개키 기반인증
비대칭 암호화를 사용하여 안전하게 통신하거나 사용자를 인증하는 방식

비대칭 암호화 .
두가지 키쌍(공개키,개인키) 을 사용
하나의 키로 암호화된 데이터는 다른 키로만 복호화가 가능하다 .
개인키를 노출하지않고도 데이터를 안전하게 주고받을 수 있다 .

공개키 
모든 사람이 접근할 수 있도록 공개된 키
서버나 다른 사용자에게 배포하여 인증할 때 사용 .

개인키
사용자만이 소유하는 비밀키 공개키로 암호화된 데이터를 복호화 하거나 서명을 할 때에 사용 .

인증과정
사용자가 자신을 서버에 인증할 때 , 서버는 사용자의 공개키를 사용해 사용자에게 암호화된 메세지를 보낸다 .
사용자는 자신의 개인키를 이용해 이 메세지를 복호화하고 , 그 결과를 다시 보내면 서버가 사용자의 신원을 확인할 수 있다 .


포트 포워딩
포트
네트워크 통신에게 데이터를 주고받는 출입구와 같은 역할을 한다 .

IP주소와 포트를 조합하여 하나의 네트워크 장치에서 여러 서비스를 동시에 운영할 수 있다 .
웹서버는 443번포트(HTTPS), 80번 포트 (HTTP) , 22번포트 (SSH서버) , 등 기본적으로 사용하고있는 포트들이 있다

포트포워딩
외부 네트워크에서 들어오는 특정 포트로의 트래픽을 내부 네트워크의 특정 장치와 포트로 전달하는 방식이다 .

외부에서 8080번 포트로 들어오는 요청을 내부의 192.160.0.100 IP의 80번 포트로 전달하겠다 .

내부서버가 특정포트를 열어놓으면 (인바운드 규칙) 외부에서 내부서버로 접속할 수 있게 해준다 .

git init 
해당 폴더를 git으로 관리하겠다 라고 지정 

스테이지 : 임시로 저장되는 공간

git add .   
로컬에 변경사항을 스테이지에 올린다 .

git commit -m "project init" 

변경사항을 적용

git branch -M main 
브랜치 이름을 main 으로 설정

git remote add origin 
git허브의 저장소와 연결

git push origin main
로컬의 변경사항을 github에푸시 







































