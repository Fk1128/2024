Spirng 2 JPA



JPA란 ?

JPA는 Java Persistence API 이다 . 
JPA는 ORM기술이다.
JPA는 반복적인 CRUD 작업을 생략하게 해준다 .
JPA는 영속성 컨텍스트를 가지고있다 .
JPA는 DB와 OOP의 불일치성을 해결하기 위한 방법론을 제공한다 .(DB는 객체저장 불가능)
JPA는 OOP의 관점에서 모델링을 할 수 있게 해준다 . (상속, 콤포지션, 연관관계)
방언처리가 용이하여 MIgration 하기 좋음 . 유지보수에도 좋음.
JPA는 는 쉽지만 어렵다 .

1. JPA는 Java Persistence API 이다 . 
persistence(영속성)는 데이터를 생성한 프로그램의 실행이 종료되더라도 사라지지않는 데이터의 특성을 의미한다 .
영속성은 파일시스템 , 관계형 데이터베이스 혹은 객체데이터베이스 등을 활용하여 구현한다 .
API란 ? Application Programming Interface
인터페이스를 통해 프로그래밍하여 만들어진 애플리케이션을 API라고 한다 

프로토콜			인터페이스 
동등한 관계에서의약속	상하관계가 존재하는 약속

2. JPA는 ORM 기술이다 .
ORM Object Relational Mapping  - 오브젝트를 데이터베이스에 연결하는 방법

JPA의 규칙을 지키면 Java class를 DB에 테이블로 만들 수 있다 


3. JPA는 영속성 컨텍스트를 가지고있다.

JPA를 이해하는데 가장 중요한 용어이다.
논리적인 개념으로, 눈에 보이지 않는다.
“Entity를 영구 저장하는 환경”이라는 뜻

* 4. JPA는 DB와 OOP의 불일치성을 해결하기 위한 방법론을 제공한다 .(DB는 객체저장 불가능)
자바가 주도권을 쥐고있는 모델링이 가능하다
객체-관계 매핑: JPA는 데이터베이스의 테이블과 Java 객체 간의 매핑을 제공합니다. 이를 통해 개발자는 데이터베이스와의 상호작용을 객체 지향적으로 수행할 수 있다 .

5. JPA는 OOP의 관점에서 모델링을 할 수 있게 해준다 . (상속, 컴포지션, 연관관계)
Composition(결합) : 하나의 객체가 다른 객체를 포함하여 그 객체의 기능을 활용하는 방식
상속과 컴포지션을 활용한 방법을 제안한다 .






















