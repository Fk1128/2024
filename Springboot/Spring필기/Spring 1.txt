Spring 1


스프링이란 ? 
스프링은 프레임워크이다 .
스프링은 IoC 컨테이너를 가진다 .
스프링은 DI를 지원한다 . //1
스프링은 엄청나게 많은 필터를 가지고있다 .
스프링은 엄청나게 많은 어노테이션을 가지고있다 . (리플렉션 , 컴파일체킹) //2
스프링은 MessageConverter를 가지고있다 기본값은 현재 Json이다 .
스프링은 BufferedReader와 BufferedWriter를 쉽게 사용할 수 있다 .
스프링은 계속 발전중이다 .


스프링 프레임워크 활용의 이유 .
의자라는 객체 s를 만들어 활용하고싶다 .
public void make (){
chair s = new chair() ;
} 	이런식으로 의자에 대한 객체를 만들어 heap에 메모리를 올린다 .

이 의자객체 s의 대한 주소는 make메서드가 실행될때만 heap에 메모리를 올려서 사용하게된다 .
다른메서드에서 의자객체 s를 사용하고싶어서

public void use(){
chair s = new chair() ;
}	이렇게 사용했을시 새로운공간에 새로운 의자 메모리를 heap에 만들게 되는것이다 
	이렇게 사용하지않고 다른 방법으로 물론 s를 사용하는 코드를 짤수있지만 
	로직을 짜기가 어렵다 .
우리는 make()메서드에서 만든 의자객체s를 다른곳에서 똑같이 사용하기위해  만들어놓은 클래스들을 스캔후
heap메모리에 자동으로 올려주고 그 클래스들로 만들어진 객체들을 사용할 수 있게해준다 .
spring을 사용한다 .
 이 예시 에서 IoC , DI , 싱글톤 패턴의 개념이 들어있다 .

1.IoC 제어의역전 : 내가 사용할 객체들을 내가 생성하고 관리하는것이아닌 
객체의 생성과 의존성 관리를  스프링이 하는것

IoC 컨테이너란 ? 

Inversion of Controll 제어의 역전  주도권이 스프링에있다라는것 ..
Class -> 설계도 			
Object  -> 실체화가 가능한 것
Instance  -> 실체화 된것 

DI 란 ? 
Dependency Injection 의존성 주입 

2. 스프링은 엄청나게 많은 필터를 가지고있다 .
스프링은 엄청나게 많은 어노테이션을 가지고있다 
filter(검열) 

컴파일체킹 
어노테이션 (주석+힌트)
리플렉션 (분석하는기법 -> 런타임시 분석)
주석은 컴파일러가 무시한다 .
어노테이션은 컴파일러가 무시하지않는다 .

@Component -> 클래스 메모리에 로딩
@Autowired -> 의존성 주입 

스프링에 라이브러리로 MessageConverter를 가지고있다 기본값은 현재 Json이다 .
MessageConverter란 Java프로그램에서 다른 프로그램에 요청,응답할때 Json으로 변환해주는것이다 .

스프링은 BufferedReader와 BufferedWriter를 쉽게 사용할 수 있다 .
BufferedReader, BufferedWriter 를 사용하면 가변길이의 문자를 주고 받을 수있다 
@ResponseBody -> BufferedWriter
@RequestBody -> BufferedReader







