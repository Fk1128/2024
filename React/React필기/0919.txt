리액트
페이지를 여러개 만드는게아닌 하나의 페이지에 컴포넌트를 바꾸는 형식으로 만드는 SPA이다.

컴포넌트
UI의 모음 페이지를 구성하는 최소단위
컴포넌트란, 재사용이 가능한 각각의 독립된 모듈이다. (재사용 가능한 UI 코드 조각)
1. 클래스형 컴포넌트 -> 거의 안씀
2. 함수형 컴포넌트

function 함수명(){
	return(
	HTML 코드
)
}

const name = [
	k1 :  asd ,
	k2 : asd2 ,
	
]
const element = <h1>hello,{name.k1}</h1>;
&& 연산자 : 앞의값이 참일때 뒤에값을 전달.

export 


props 
props 는 자식컴포넌트에서 읽기 전용이다 .
자식컴포넌트는 props 를 수정할 수 없으며 , 부모컴포넌트에서 변경할 수 있다 .



컴포넌트 생명주기 메서드


1생성 (Mount)
constructor()
- 컴포넌트가 생성 될 때 가장 먼저 호출되며 , 초기상태(state)를 설정할 수있다.
render() 
- UI 를 렌더링하는 메서드로 JSX를 반환한다 .


2. 업데이트(Updating)
- 컴포넌트가 업데이트 될 때 즉props 나 state가 변경 될 때 호출되는 메서드이다 .


3. 제거 (Unmounting)

기존에 있던 컴포넌트가 빠지는것 .
- 컴포넌트가 제거되기 직전에 호출되며 , 타이머 정리 , 구독 해제등 정리작업(clean up) 을 수행한다 .


useEffcet 훅
React의 함수형 컴포넌트에서
렌더링과 관련없는 코드들을 사용하려고할 때 , 사이드이펙트를 처리하는데 사용된다 
사이드이펙트는 컴포넌트의 렌더링과는 직접적으로 관련이 없는 작업들을 말한다 .


useEffect(() => {
    // 이 부분이 사이드 이펙트 코드입니다.
    document.title = `You clicked ${count} times`;

    // 클린업 함수 (선택적)
    return () => {
      // 컴포넌트가 언마운트되거나 의존성 배열의 값이 변경되기 전에 실행됩니다.
    };
  }, [count]); // 의존성 배열



useState -> 지역변수
useRef -> 전역변수


useRef 훅
React 에서 DOM 요소나 컴포넌트 인스턴스에 대한 래퍼런스를 유지(값을 유지)할 때 사용된다 
렌더링 사이에서 값을 저장할 수 있으며 컴포넌트가 다시 렌더링이 되더라도 값이 유지된다.
컴포넌트 렌더링과 관련이 없는 값을 저장하거나 DOM 요소(HTML 태그)에 직접 접근할 떄 유용하다 .

const 변수명 =useRef(초기값)

함수의 실행 결과로 {current : 초기값}을 지닌 객체가 반환된다 .


변수명.current


Mount 
Updating 
UnMount
 ref의 값은 바뀌지않는다 .

useParams() 





npx create-react-app 
상품 카테고리와 상품 상세 페이지 구현하기



