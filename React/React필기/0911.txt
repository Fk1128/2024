프론트엔드 개발
사용자의 바로 앞에서 사용자와 상호작용하며 애플리케이션 로직을 수행하고 백엔드 서버로 요청을 전달하는 역할 

웹서비스에서 클라이언트 또는 프론트엔드란 웹 브라우저를 뜻한다.
사용자는 자신의 컴퓨터에서 브라우저를 실행한다.
인터넷을 이용해 서버에 있는 자원을 사용자의 컴퓨터로 다운로드 후 , 브라우저에서
실행시킨다.

프론트엔드 개발환경 설정
자바스크립트 라이브러리인 react.js 를 이용해 프론트엔드 개발을 한다.
React.js 를 사용하기 위해 자바스크립트 런타임 환경을 이용한다.
Node.js를 이용하면 브라우저 밖에서도 스크립트를 컴파일 하고 실행할 수 있다 .

Node.js
이전에 자바스크립트 코드의 실행결과는 브라우저 내에서만 실행이 가능했다 .
자바스크립트를 실행하기 위해서는 브라우저상의 html렌더링의 일부로 실행하거나 개발자 창의 자바스크립트
콘솔을 이용해 실행해야 했다.
노드js는 자바스크립트를 컴퓨터에서 실행할 수 있게 해주는 자바스크립트 런타임 환경이다.

브라우저 밖에서도 실행할 수 있다는 것은 자바스크립트를 클라이언트 언어뿐만 아니라 서버언어로도
사용할 수 있다는 뜻이다.
즉, 자바스크립트로 서버를 만들 수 있다는 뜻이다.

우리는 자바스크립트로 된 node서버를 이용해 프론트엔드 서버를 개발한다 .
요청이 왔을 때 HTML,JS,CSS를 반환하는 정도의 기능을 할 것이다 .

NPM (Node Package Manager)
node.js 의 패키지 관리 시스템
npm을 이용해 npmjs(https://www.npmjs.com)에서 node.js 라이브러리를 설치한다 . npm은 node.js를 설치하면 함께 설치된다.

책에서는 16.14.2LTS 버전을 사용하므로 공부할 때는 같은 버전을 사용하는것을 권장한다.

nodejs 프로젝트를 초기화 하기 위해서는 npm init 을 사용한다 .
우리는 npm이 아닌 npx라는 툴로 리액트 애플리케이션을 초기화 할 예정이다 .
npm을 사용해 초기화 할 경우 일일이 설정해야 하는 부분이 많기 떄문이다 .

npm으로 프로젝트를 구성하려고 하면
패키지 이름 , 버전 , 등등 설정해야 하는 내용이 많다.
이 정보들을 다 입력하고 나면 package.json이라는 파일을 만들어준다 .
package.json에 프로젝트의 메타데이터가 들어간다 .

  //dependecies : 의존성
  // 내가 프로젝트를 구성하는데 필요한 라이브러리를 정의하는 공간

"react" : ^18.3.1"

version	명시된 버전과 일치
>version 	명시된 버전보다 높은 버전
>=version 명시된 버전보다 같거나 높은버전
<=version 명시된 버전과 같거나 낮은버전
~version 명시된 버전과 근사한버전 ( 패치한 버전 범위 내)
^version 명시된 버전과 호환되는 버전

ex) ^1.2.3 -> 내가 1.2.3 버전으로 개발을 했는데 이 버전과 호환되는 최근 버전으로 사용해줘 라는 뜻이다 .
//getElementById (' ') id에 대한 정보를 가져오는 함수 

material - ui
리액트 개발에서 쉽게 사용할 수 있는 UI프레임워크이다.
미리 만들어놓은 컴포넌트나 CSS를 사용할 수 있다 .

emotion
JS로 CSS스타일을 작성할 수 있도록 설계된 라이브러리 
material 을 사용할 때 필요한 패키지이다 .


브라우저의 작동원리
HTML을 받은 브라우저는 프론트엔드 서버로부터 
파싱, 렌더링을 거쳐 텍스트로된 HTML을 브라우저에 보여준다 .

파싱 (Parsing)  (구문분석)
주어진 데이터를 구문분석하여 의미있는구조로 변환하는 과정
렌더링을 하기 위한 전처리단계이다 .

파싱은 일련의 문자열로 이루어진 입력을 토큰(Token)이나 트리(Tree)와 같은 구조로 변환하는 과정.입력을 분석하여 구조적인 정보를 추출하고 해석함.
그래서 html파싱해서 dom tree로 변환시켜주고 css를 파싱해서 CSSOM트리로 변환시켜주는 것.
html 파싱 ->html DOM tree
			  === Render Tree로 변환  
css 파싱 -> CSSDOM tree   

렌더링 (Rendering)
렌더링이란 HTML,CSS, 자바스크립트 등 개발자가 작성한 문서가 브라우저에서 출력되는 과정을 말합니다.




렌더링 원리
1. HTML 코드를 파싱한다 . DOM 트리로 만든다 .
2. image,css,script 등 다운로드해야하는 리소스를 다운로드한다.
3, CSS도 CSSOM트리로 변환을 한다 .
4. 다운로드한 자바스크립트를 인터프리트 , 컴파일 , 파싱, 실행한다.
5. 파싱을 마친 후 브라우저느 렌더링에 들어간다.


SPA(Single Page Application) <-> MPA(Multi Page Application)
한번 웹페이지를 로딩하면 유저가 임의로 새로고침 하지 않는이상 페이지를 새로 로딩하지않는 
애플리케이션을 의미한다 .
서버에 다시 요청하지 않고 자바스크립트가 동적으로 HTML을 재구성해서 만드는 애플리케이션

	CSR(Client Side Rendering)
	- 서버에서 최소한의 HTML을 받고,
	내부에 위치한 SCRIPT태그로 JS를 받아서 클라이언트에서 페이지를 렌더링 하는 형식
	종류 - REACT,VUE,ANGULAR

	장점
	- 초기 렌더링 이후에 진행되는 렌더링의 속도가 매우 빠르다.

	단점
	- 초기 구동에 필요한 파일을 전부 받아야 하기 떄문에 초기페이지 구동속도가 느리다.

SSR(Server Side Rendering)
- 서버에서 사전에 렌더링된 파일을 클라이언트에게 전송하고 , 클라이언트는 이를 
즉시 렌더링 하는 방식
- 단 JS 의 경우 정적 리소스(HTML,CSS) 가 렌더링 된 후 적용되기 떄문에 JS가 모두
적용되기 전에는 조작이 불가능하다 .

1. 사용자가 웹페이지를 방문할 경우, 서버는 이를 확인하고 브라우저에게 제공할
HTML컨텐츠를 컴파일한다.
2. 컴파일된 HTML은 브라우저에 제공되며 , 브라우저는 이를 다운로드 하고 렌더링 하여 사용자가
이를 볼 수 있도록한다 .
3. 이후 JS파일을 다운로드받은 후 실행하여 사용자와 페이지간의 상호작용을 가능하게끔한다.
4. 사용자가 다른페이지로 이동을 할 경우 , 1 ~ 3번 과정을 반복한다 .

- JSP , Thymeleaf  

ReactDOM
-react는 순수 자바스크립트이고 , 자바스크립트를 이용해 컴포넌트를 만들어 나간다 .
- 실제로 브라우저가 이해할 수 있는 것은 HTML,CSS,JS 뿐이다 .
- JSX 문법으로 작성 된 코드를 Babel 라이브러리가 순수 자바스크립트로 변환하고
우리가 만든 컴포넌트를 html과 연결하는 작업을 해주는 라이브러리가 ReactDOM 이다 .

JSX
React가 한파일에서 HTML과 JS 를 함께사용하기 위해 확장한 자바스크립트 문법이다 .

Babel
바벨(Babel)이란, 입력과 출력이 모두 자바스크립트 코드인 컴파일러입니다
JS 컴파일러
Javascript 로 결과물을 만들어주는 컴파일러
JSX 를 JS형태로 컴파일해주는 라이브러리 
최신버전의 자바스크립트가 실행되지 않는 구버전의 브라우저에서도
정상적으로 작동하도록 변환해준다 .


컴포넌트 
페이지에 랜더링할 React 엘리먼트를 반환하는 작고 재사용가능한 코드조각
컴포넌트란, 재사용이 가능한 각각의 독립된 모듈이다. (재사용 가능한 UI 코드 조각)
함수,클래스형식으로 만들 수 있다 .
함수형식을 더 많이사용한다 .(아예 배제하는건 아님)

정리
1. 브라우저가 어떻게 작동을 하는가 .
2. node.js 설치 -> npm,npx를 이용하여 react 프로젝트를 생성
3. 애플리케이션 실행
4. 리액트가 SPA로 어떻게 작동하는지 알아보았다 .
4-1. 렌더링 원리와 렌더링의 종류 
5. JSX가 무엇인지 알아봤다 .


9/12 오전정리
리액트
자바스크립트 라이브러리
nodejs가 있어야 npm(Node Package Manager) 을 이용해서 설치가 가능하다 .

node.js 의 경우 js 코드를 브라우저 밖에서 실행할 수 있게 해주는 런타임환경
js를 콘솔or 터미널에서 확인하는것이 가능해짐으로써 서버로 만드는게 가능해졌다

npm을 이용해서 리액트 프로젝트 생성하기

워크스페이스로 만들 폴더를 지정
터미널로 폴더 경로를 잘 잡는다 .

npm init 
node.js 프로젝트 초기화를 위한 커멘드
패키지이름,버전정보,패키지 설명 등등 여러 정보를 정해줘야 한다 .
package.json에 객체형태로 저장된다 .

디펜던시

npm install react 
리액트 다운로드

npx를 이용한 리액트 프로젝트 구성하기

워크스페이스로 사용할 폴더 만들기 - mkdir
터미널로 폴더의 경로를 잡는다 . - cd 
 
터미널과 친해지기 -> 많이써봐야함 

npx를 통해 리액트 앱 만드는 방법
npx create react-app todo-react-app

node module 에 라이브러리들이 다운로드

리액트 프론트엔드 서버 올리기

npm start -> 요청 localhost:3000  -> 화면
app.js -> index.js -> index.html

브라우저에서 화면이 어떻게 렌더링이 되는가

1 파싱 
htmlDOM tree
+		Rendertree
CSSDOM tree
2렌더링 

SPA
한번 웹페이지를 로딩하면 유저가 새로고침을 하지않는이상 새로 로딩하지 않는다 .
SPA의 렌더링 방식 
- CSR(Client Side Redering)
자바스크립트가 동적으로 HTML을 재구성해 만드는 클라이언트 렌더링 방식 

컴포넌트만 바꿈
































